sap.ui.define(["sap/ui/core/mvc/Controller",
	'sap/ui/model/SimpleType',
	'sap/ui/model/ValidateException',
	'sap/ui/model/json/JSONModel',
	'sap/m/MessageBox',
	'sap/m/MessageToast'
], function (Controller, SimpleType, ValidateException, JSONModel, MessageBox, MessageToast) {
	"use strict";
	return Controller.extend("com.app.tax.TaxApp-alpha.controller.logon", {
		onInit: function () {
			this.oView = this.getView();
			this.oRouter = sap.ui.core.UIComponent.getRouterFor(this);

			this.oModel = this.getOwnerComponent().getModel("login");
			this.getView().setModel(this.oModel, "logins");

			var localModel = new sap.ui.model.json.JSONModel();
			localModel.loadData("model/sample.json");
			this.oView.setModel(localModel, "localData");

		},
		_validateInput: function (oInput) {
			var oBinding = oInput.getBinding("value");
			var sValueState = "None";
			var bValidationError = false;

			try {
				oBinding.getType().validateValue(oInput.getValue());
			} catch (oException) {
				//sValueState = "Error";
				bValidationError = true;
			}
			oInput.setValueState(sValueState);

			return bValidationError;
		},

		onContinue: function () {
			var filter = new Array();
			var FilterVal;

			var checked = this.oView.byId("CH1").getSelected();
			var that = this;

			var mailid = this.getView().byId("emailInput").getValue();
			var password = this.getView().byId("ipass").getValue();

			FilterVal = new sap.ui.model.Filter("email", sap.ui.model.FilterOperator.EQ, mailid);
			filter.push(FilterVal);
			FilterVal = new sap.ui.model.Filter("password", sap.ui.model.FilterOperator.EQ, password);
			filter.push(FilterVal);

			if (checked) {
				this.oModel.read('/Cadmin', {
					filters: filter,
					success: function (getData) {
						if (getData.results.length > 0) {
							that.oRouter.navTo('adminDash');
						} else {
							MessageBox.alert("Incorrect Password");
						}
					},
					error: function () {}
				});
			} else {
				this.oModel.read('/Cclient', {
					filters: filter,
					success: function (getData) {
						if (getData.results.length > 0) {
							that.getOwnerComponent().getModel("userData").setData(getData.results[0]);
							that.oRouter.navTo('userDashboard');
						} else {
							MessageBox.alert("Incorrect Password");
						}
					},
					error: function () {

					}
				});
			}
		},
		// },
		/**
		 *@memberOf com.app.tax.TaxApp-alpha.controller.logon
		 */
		// pressme: function (oEvent) {
		// 	//This code was generated by the layout editor
		// },

		customEMailType: SimpleType.extend("email", {
			formatValue: function (oValue) {
				return oValue;
			},
			parseValue: function (oValue) {
				//parsing step takes place before validating step, value could be altered here
				return oValue;
			},
			validateValue: function (oValue) {
				// The following Regex is NOT a completely correct one and only used for demonstration purposes.
				// RFC 5322 cannot even checked by a Regex and the Regex for RFC 822 is very long and complex.
				var rexMail = /^\w+[\w-+\.]*\@\w+([-\.]\w+)*\.[a-zA-Z]{2,}$/;
				if (!oValue.match(rexMail)) {
					throw new ValidateException("'" + oValue + "' is not a valid email address");
				}
			}
		})

	});
});